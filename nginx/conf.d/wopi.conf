# HTTP -> redirect to HTTPS and respond to ACME challenge
server {
    listen 80;
    server_name wopi.reef.lat;

    root /var/www/certbot;

    location /.well-known/acme-challenge/ {
        try_files $uri =404;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# server {
#     listen 80;
#     server_name wopi.reef.lat;

#     # Certbot challenge location
#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     # Return a simple page for other requests (optional)
#     location / {
#         return 200 'OK - certbot challenge mode';
#         add_header Content-Type text/plain;
#     }
# }

# # HTTPS â€” will serve when certs are present. Use same cert as office.reef.lat
server {
    listen 443 ssl;
    http2 on;
    server_name wopi.reef.lat;

    ssl_certificate /etc/letsencrypt/live/office.reef.lat/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/office.reef.lat/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/office.reef.lat/chain.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    # Optional: HSTS for production (beware while testing)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_read_timeout 90;
        proxy_send_timeout 90;
        proxy_buffering off;

        proxy_pass http://wopi:5000;
    }

    client_max_body_size 50M;
}
